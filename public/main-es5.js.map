{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/about/about.component.html","src/app/components/blog/blog.component.html","src/app/components/cert/cert.component.html","src/app/components/dashboard/dashboard.component.html","src/app/components/encrypt/encrypt.component.html","src/app/components/home/home.component.html","src/app/components/list/list.component.html","src/app/components/login/login.component.html","src/app/components/mac/mac.component.html","src/app/components/navbar/navbar.component.html","src/app/components/profile/profile.component.html","src/app/components/register/register.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/components/about/about.component.scss","src/app/components/about/about.component.ts","src/app/components/blog/blog.component.scss","src/app/components/blog/blog.component.ts","src/app/components/cert/cert.component.scss","src/app/components/cert/cert.component.ts","src/app/components/dashboard/dashboard.component.scss","src/app/components/dashboard/dashboard.component.ts","src/app/components/encrypt/encrypt.component.scss","src/app/components/encrypt/encrypt.component.ts","src/app/components/home/home.component.scss","src/app/components/home/home.component.ts","src/app/components/list/list.component.scss","src/app/components/list/list.component.ts","src/app/components/login/login.component.scss","src/app/components/login/login.component.ts","src/app/components/mac/mac.component.scss","src/app/components/mac/mac.component.ts","src/app/components/navbar/navbar.component.scss","src/app/components/navbar/navbar.component.ts","src/app/components/profile/profile.component.scss","src/app/components/profile/profile.component.ts","src/app/components/register/register.component.scss","src/app/components/register/register.component.ts","src/app/guards/auth.guard.ts","src/app/services/auth.service.ts","src/app/services/validate.service.ts","src/environments/environment.ts","src/main.ts","crypto (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container main\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","export default \"<div>\\n  <h2 class=\\\"page-header\\\">What is dual-token authentication? </h2>\\n\\n  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n    <h5>\\n      It is a new token authentication technology that can be used in web services to improve security and efficiency of\\n      web services. <br><br>\\n\\n      OAuth2.0 (and JWT) is the standard token authentication technology that is widely used in modern web services.\\n      OAuth 2.0 bearer token is widely used for stateless authentication in web environment, but it is vulnerable to\\n      eavesdropping attack. Thus, it should be used only in secure communication environment like https that it cannot\\n      provide stateless authentication. OAuth 2.0 MAC token is designed to provide randomized authentication using\\n      message authentication code that it can be used in non-secure communication environment, but it cannot provide\\n      stateless authentication since server has to keep the track of all mac keys for every client. <br><br>\\n\\n      Dual-token authentication is newly developed token authentication technology that uses dual-token instead of\\n      single token. Server issues dual-token (public token and secret token) to logged in client (web browser). Then\\n      client can prove its authenticity instantly in time-dependent one-time way using the dual-token, and the server\\n      can verify it stateless way without managing any user dependent information. <br><br>\\n\\n      Dual-token authentication is very efficient in the point of web server. Since time-dependent one-time\\n      authentication information cannot be reused by eavesdropping attacker, whole web service can be served in\\n      non-secure communication channel, which will save lots of computing. It is considered as an ultimate token\\n      authentication technology that makes real stateless web service possible. <br><br>\\n\\n      This is a simplified model service that demonstrate the dual-token authentication.\\n    </h5>\\n\\n  </div>\\n\\n\\n  <h2 class=\\\"page-header\\\">Implementation Environment </h2>\\n\\n  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n    <b>MEAN Stack </b>\\n    <p>\\n      Web development using MongoDB/Express/Angular/Node.js\\n    </p>\\n\\n    <b>Node.js/Express Backend </b>\\n    <p>\\n      Backend service using node.js and express\\n    </p>\\n\\n    <b>Angular/Cli Frontend </b>\\n    <p>\\n      Easy web development using Angular front-end framework\\n    </p>\\n\\n    <b>Ionic Framework </b>\\n    <p>\\n      Dual(iOS/Android) mode mobile app development using Ionic framework\\n    </p>\\n\\n    <b>Heroku Deployment </b>\\n    <p>\\n      Heroku Cloud Service\\n    </p>\\n\\n    <b>MongoDB Compass </b>\\n    <p>\\n      MongoDB as a Service\\n    </p>\\n  </div>\\n\\n  <h2 class=\\\"page-header\\\">Security Technologies</h2>\\n\\n  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n    <b>Dual-Token Authentication </b>\\n    <p>\\n      Server issues dual-token(public token/secret token) to logged in users <br>\\n      Keeping authenticated state using dual-token through plain communication channel <br>\\n      High performance without https requirement <br>\\n    </p>\\n\\n    <b>JWT Authentication </b>\\n    <p>\\n      Application example of JWT authentication <br>\\n      It should be executed in https secure communication\\n    </p>\\n\\n    <b>Issuing Certificate </b>\\n    <p>\\n      Server issues certificate to logged-in user\\n    </p>\\n\\n    <b>Signature-based One-click Easy Login </b>\\n    <p>\\n      Implement one-click easy login using digital signature and certificate\\n    </p>\\n\\n    <b>Secure ID/Pass Login </b>\\n    <p>\\n      Server delievers server certificate to client when root(home) page is connected. <br>\\n      ID/Pass login information was encrypted with server certificate. <br>\\n      Server sends dual-token to client in encrypted way\\n    </p>\\n\\n    <b>Simple Encryption Channel using Dual Token </b>\\n    <p>\\n      Generate one-time key using dual-token and apply to message encryption\\n    </p>\\n\\n    <b>Simple Message Authentication using Dual Token </b>\\n    <p>\\n      Generate one-time key using dual-token and apply to message authentication\\n    </p>\\n  </div>\\n\\n  <h2 class=\\\"page-header\\\">Details of Generation and Usage of Dual-Token </h2>\\n\\n  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n    <b>Issuing dual-token by server </b>\\n    <p>\\n      ptoken = JWT(userInfo, serverSecretKey) <br>\\n      stoken = JWT(ptoken, serverSecretKey) <br>\\n      Server sends [ptoken, stoken] to client <br>\\n      Client saves [ptoken, stoken] in LocalStorage of the browser\\n    </p>\\n\\n    <b>Generating one-time auth info by client </b>\\n    <p>\\n      Generate client current time (ctime) <br>\\n      Compute auth = Hash(ctime, stoken) <br>\\n      Client sends [ctime, ptoken, auth] to server\\n    </p>\\n\\n    <b>Verification of client authentication by server </b>\\n    <p>\\n      Generate server current time (stime) <br>\\n      Compute stoken from ptoken: stoken = JWT(ptoken, serverSecretKey) <br>\\n      Compute auth' = Hash(ctime, stoken) <br>\\n      Verification: (1) Check time difference, (2) Verification of ptoken, (3) Match auth=?auth'\\n    </p>\\n\\n  </div>\\n\\n  <h2 class=\\\"page-header\\\">Notices </h2>\\n\\n  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n    <b>When ID/pass login fails </b>\\n    <p>\\n      Reload Home page, which will deliever server certificate. <br>\\n      ID/Pass login uses server certificate to protect login information from eavesdropping.\\n    </p>\\n\\n    <b>When easy login fails </b>\\n    <p>\\n      You can utilize easy login only when the client browser is equipped with certificate. You need to get the\\n      certificate first.\\n    </p>\\n  </div>\\n\\n  <h2 class=\\\"page-header\\\">Contact Info. </h2>\\n\\n  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n    <b>Professor Byoungcheon Lee </b>\\n    <p>\\n      - Department of Information Security, Joongbu University, Korea <br>\\n      - Email: sultan @ joongbu . ac . kr <br>\\n      - Homepage: <a href=\\\"http://cris.joongbu.ac.kr\\\"> http://cris.joongbu.ac.kr</a>\\n\\n    </p>\\n\\n  </div>\\n\"","export default \"<div *ngIf=\\\"name\\\">\\n  <h2 class=\\\"page-header\\\"> JWT Authentication </h2>\\n  <p>\\n    Demonstration of JWT authentication\\n  </p>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Name: {{name}}</li>\\n    <li class=\\\"list-group-item\\\">Username: {{username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{email}}</li>\\n    <li class=\\\"list-group-item\\\">Age: {{age}}</li>\\n  </ul>\\n  <br>\\n  <h2 class=\\\"page-header\\\"> Information sent to the server to access this page </h2>\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n    <p>Public Token :\\n      <textarea class=\\\"form-control\\\" rows=\\\"5\\\"> {{ptoken}}</textarea>\\n    </p>\\n\\n    <p>\\n      Fixed JWT(ptoken) is sent to the server repeatedly. <br>\\n      If eavesdropping attacker gets this token, s/he will be able to logged in easily. <br>\\n      Thus, this communication should be protected with https protocol.\\n    </p>\\n  </div>\\n</div>\\n\"","export default \"<h2 class=\\\"page-header\\\">Certificate Request</h2>\\n<form (ngSubmit)=\\\"onCertRequest()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label> Common Name - common name is same as username. It is auto typed in. </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"common\\\" name=\\\"common\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Organizational Unit Name </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"orgUnit\\\" name=\\\"orgUnit\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Organization Name </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"organization\\\" name=\\\"organization\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Locality Name </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"locality\\\" name=\\\"locality\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> State or Province Name </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Country - KR for Korea </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"country\\\" name=\\\"country\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Certificate Request\\\">\\n</form>\\n\"","export default \"<div *ngIf=\\\"name\\\">\\n  <h2 class=\\\"page-header\\\">Name: {{name}}</h2>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label>UserInfo</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"1\\\" disabled>{{userString}}</textarea>\\n    </div>\\n    <hr>\\n    <div class=\\\"form-group\\\">\\n      <label>Public Token</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"8\\\" disabled>{{ptoken}}</textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Secret Token</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"8\\\" disabled>{{stoken}}</textarea>\\n    </div>\\n    <hr>\\n    <div class=\\\"form-group\\\">\\n      <label>User certificate</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"8\\\" disabled>{{certPem}}</textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Server certificate</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"8\\\" disabled>{{caCertPem}}</textarea>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<h2 class=\\\"page-header\\\">Message Encryption </h2>\\n<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  <p>\\n    This page demonstrates message encryption using one-time secret key which is changing continually depending on time.\\n    Server can recover the same one-time secret key and decrypt the ciphertext. Try to send the same message repeatedly,\\n    then check the changing of one-time secret key.\\n  </p>\\n</div>\\n<hr>\\n<form (ngSubmit)=\\\"onEncryptSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label> Type in input message.</label>\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"plaintext\\\" name=\\\"plaintext\\\"></textarea>\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Send Encrypted Message\\\">\\n</form>\\n<hr>\\n\\n<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  <h4>Generated one-time secret key </h4>\\n  <p>{{key}}</p>\\n</div>\\n\\n<div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n  <h4> Information sent to the server </h4>\\n  <p> - Public Token:\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\"> {{ptoken}}</textarea>\\n  </p>\\n  <p> - Current Time: {{ctime}} </p>\\n  <p> - Ciphertext:\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\"> {{encrypted}}</textarea>\\n  </p>\\n</div>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  <h4> Server reply of decrypted message </h4>\\n  <textarea class=\\\"form-control\\\" rows=\\\"5\\\"> {{decrypted}}</textarea>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron text-center alert-danger\\\">\\n    <h1>Dual-Token Authentication </h1>\\n    <p class=\\\"lead\\\"> 이중토큰 인증 서비스 </p>\\n    <a class=\\\"btn btn-primary\\\" routerLink='/register'> Register </a>\\n    &nbsp;&nbsp;\\n    <a class=\\\"btn btn-success\\\" routerLink='/login'> Login </a>\\n  </div>\\n\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col alert-warning\\\">\\n      <h3>MEAN Framework </h3>\\n      <p>Web development using Node.js / Express / MongoDB / Angular </p>\\n    </div>\\n    <div class=\\\"col alert-info\\\">\\n      <h3>Angular Front-end</h3>\\n      <p>Front-end framework using module, component, service </p>\\n    </div>\\n    <div class=\\\"col alert-warning\\\">\\n      <h3>Ionic Framework </h3>\\n      <p>Mobile app development using Ionic Framework </p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col alert-info\\\">\\n      <h3>JWT </h3>\\n      <p>Maintaining authenticated state using JSON web token and Passport </p>\\n    </div>\\n    <div class=\\\"col alert-warning\\\">\\n      <h3>Dual token authentication </h3>\\n      <p> Keeping authenticated state using dual-token (public token/secret token) through plain communication channel\\n      </p>\\n    </div>\\n    <div class=\\\"col alert-info\\\">\\n      <h3>One-click Easy login </h3>\\n      <p>Certificate and digital signature-based one-click login </p>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <hr>\\n\\n  <h4> Information on Server Certificate </h4>\\n  <div class=\\\"alert alert-info\\\">\\n\\n    <p> Common Name: {{caCommon}} </p>\\n    <p> Organization: {{caOrganization}}</p>\\n    <p> Org Unit: {{caOU}} </p>\\n    <p> Server certificate (stored in LocalStorage) </p>\\n    <textarea class=\\\"form-control\\\" rows=\\\"8\\\">{{caCertPem}} </textarea>\\n  </div>\\n\\n  <h4> Verification of server using one-time server signature </h4>\\n  <div class=\\\"alert alert-success\\\">\\n    <p> Current Time: {{currentTime}}</p>\\n    <p> Nonce: {{nonceHex}}</p>\\n    <p> One-time signature:</p>\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\">{{signatureHex}} </textarea>\\n    <p> Signature verification: {{verified}}</p>\\n  </div>\\n\\n</div>\\n\"","export default \"<h2 class=\\\"page-header\\\">User List </h2>\\n<p>\\n  Show user list registered in this server...\\n</p>\\n<table class=\\\"table table-striped\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Username</th>\\n      <th>Email</th>\\n      <th>Age</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let user of users\\\">\\n      <td>{{user.name}}</td>\\n      <td>{{user.username}}</td>\\n      <td>{{user.email}}</td>\\n      <td>{{user.age}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","export default \"<h2 class=\\\"page-header\\\">Login </h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"alert alert-warning\\\">\\n      <h3 class=\\\"page-header\\\">ID/Pass Login </h3>\\n      <form (ngSubmit)=\\\"onLoginSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Username</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n        </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"alert alert-info\\\">\\n      <h3 class=\\\"page-header\\\"> One-click Easy Login </h3>\\n      <p>\\n        One-click easy login without ID/pass.\\n        This feature can be used only after your browser is equipped with certificate. First, you need to get the\\n        certificate from the server.\\n      </p>\\n      <form (ngSubmit)=\\\"onLoginSigSubmit()\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"One-click Easy Login\\\">\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<h2 class=\\\"page-header\\\">Message Authentication </h2>\\n<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  <p>\\n    This page demonstrates message authentication using one-time secret key which is changing continually depending on\\n    time.\\n    Server can recover the same one-time secret key and check the authenticity of message. Try to send the same message\\n    repeatedly, then check the changing of one-time secret key.\\n  </p>\\n</div>\\n<hr>\\n<form (ngSubmit)=\\\"onMacSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label> Type in input message.</label>\\n    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"plaintext\\\" name=\\\"plaintext\\\"></textarea>\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Send Message\\\">\\n</form>\\n<hr>\\n\\n<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  <h4>Generated one-time secret key </h4>\\n  <p>{{key}}</p>\\n</div>\\n\\n<div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n  <h4> Information sent to the server </h4>\\n  <p> - Public Token:\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\"> {{ptoken}}</textarea>\\n  </p>\\n  <p> - Current Time: {{ctime}} </p>\\n  <p> - Message:\\n    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"> {{plaintext}}</textarea>\\n  </p>\\n  <p> - MAC: {{mac}} </p>\\n</div>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n  <h4> Server reply </h4>\\n  <p> {{msg}} </p>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink='/'>DualTokenAuth</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/'>Home</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/about'>Intro</a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/dashboard'> Dashboard </a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/list'>List</a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/blog'> JWT </a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/profile'>DTA </a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/encrypt'> Encrypt </a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/mac'> Mac </a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/cert'> Certificate </a></li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li *ngIf=\\\"!checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/login'>Login</a></li>\\n      <li *ngIf=\\\"!checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink='/register'>Register</a></li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n      </li>\\n      <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"onDeleteCertClick()\\\"\\n          href=\\\"#\\\">DeleteCert</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","export default \"<div *ngIf=\\\"name\\\">\\n  <h2 class=\\\"page-header\\\"> DTA Demonstration </h2>\\n  <p>\\n    Demonstration of dual-token authentication\\n  </p>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Name: {{name}}</li>\\n    <li class=\\\"list-group-item\\\">Username: {{username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{email}}</li>\\n    <li class=\\\"list-group-item\\\">Age: {{age}}</li>\\n  </ul>\\n  <br>\\n  <h2 class=\\\"page-header\\\"> Information sent to the server to access this page </h2>\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n    <p>Public Token:\\n      <textarea class=\\\"form-control\\\" rows=\\\"6\\\"> {{ptoken}}</textarea>\\n    </p>\\n  </div>\\n  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n    <p>Current Time : {{ctime}}</p>\\n    <p>One-time Auth : {{auth}}</p>\\n    <p>One-time Auth is changing depending on current time, thus eavesdropping of this information is useless.</p>\\n  </div>\\n\\n</div>\\n\"","export default \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (ngSubmit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label> Name </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Email </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Age </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"age\\\" name=\\\"age\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Username </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Password1 </label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password1\\\" name=\\\"password1\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Password2 </label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password2\\\" name=\\\"password2\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ListComponent } from './components/list/list.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { EncryptComponent } from './components/encrypt/encrypt.component';\nimport { MacComponent } from './components/mac/mac.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { CertComponent } from './components/cert/cert.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'navbar', component: NavbarComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'list', component: ListComponent, canActivate: [AuthGuard] },\n  { path: 'encrypt', component: EncryptComponent, canActivate: [AuthGuard] },\n  { path: 'mac', component: MacComponent, canActivate: [AuthGuard] },\n  { path: 'blog', component: BlogComponent, canActivate: [AuthGuard] },\n  { path: 'cert', component: CertComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".main {\\n  margin-top: 10px;\\n  min-height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRjpcXFJUQS1IZXJva3VcXGR0YVxcYW5ndWxhci1zcmMvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbn1cbiIsIi5tYWluIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWluLWhlaWdodDogNTAwcHg7XG59Il19 */\"","import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public http: HttpClient) { }\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ListComponent } from './components/list/list.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { EncryptComponent } from './components/encrypt/encrypt.component';\nimport { MacComponent } from './components/mac/mac.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { CertComponent } from './components/cert/cert.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    ListComponent,\n    EncryptComponent,\n    MacComponent,\n    BlogComponent,\n    AboutComponent,\n    CertComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FlashMessagesModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('id_token');\n        }\n      }\n    })\n  ],\n  providers: [ValidateService, AuthService, FlashMessagesService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQvYWJvdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmxvZy9ibG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  name: string;\n  username: string;\n  email: string;\n  age: number;\n  ptoken: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.ptoken = localStorage.getItem('ptoken');\n\n    this.authService.getBlog().subscribe(blog => {\n      this.name = blog.user.name;\n      this.username = blog.user.username;\n      this.email = blog.user.email;\n      this.age = blog.user.age;\n    }, err => {\n      console.log(err);\n      return false;\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2VydC9jZXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-cert',\n  templateUrl: './cert.component.html',\n  styleUrls: ['./cert.component.scss']\n})\nexport class CertComponent implements OnInit {\n  country: string;\n  state: string;\n  locality: string;\n  organization: string;\n  orgUnit: string;\n  common: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.common = JSON.parse(localStorage.getItem('userNoPW')).username;\n  }\n\n  onCertRequest() {\n    const request = {\n      country: this.country,\n      state: this.state,\n      locality: this.locality,\n      organization: this.organization,\n      orgUnit: this.orgUnit,\n      common: this.common\n    }\n\n    this.authService.certRequest(request).subscribe(data => {\n      if (data.success) {\n        this.authService.storeCert(data.cert, data.caCert);\n        this.flashMessage.show('Your certificate was issued.', {\n          cssClass: 'alert-success',\n          timeout: 3000\n        });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show('Certificate issuing fails', {\n          cssClass: 'alert-danger',\n          timeout: 3000\n        });\n        this.router.navigate(['cert']);\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  userString: string;\n  name: string;\n  ptoken: string;\n  stoken: string;\n  certPem: string;\n  caCertPem: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.userString = localStorage.getItem('userNoPW');\n    this.name = JSON.parse(this.userString).name;\n    this.ptoken = localStorage.getItem('ptoken');\n    this.stoken = localStorage.getItem('stoken');\n    this.certPem = localStorage.getItem('cert');\n    this.caCertPem = localStorage.getItem('caCert');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW5jcnlwdC9lbmNyeXB0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\nimport * as forge from 'node-forge';\n\n@Component({\n  selector: 'app-encrypt',\n  templateUrl: './encrypt.component.html',\n  styleUrls: ['./encrypt.component.scss']\n})\nexport class EncryptComponent implements OnInit {\n\n  plaintext: string;  // User input\n  ctime: any;         // Client current time\n  ptoken: any;        // Public token\n  stoken: any;        // Secret token\n  key: any;           // Generated one-time secret key\n  encrypted: any;     // Ciphertext\n  decrypted: any;     // Deciphered plaintext\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onEncryptSubmit() {\n    this.ctime = new Date().getTime().toString();\n    this.ptoken = localStorage.getItem('ptoken');\n    this.stoken = localStorage.getItem('stoken');\n    this.key = this.authService.getKey(this.ctime, this.stoken);\n    this.encrypted = this.authService.getEncrypt(this.plaintext, this.key);\n\n    this.authService.encryptedMessage(this.encrypted, this.ctime, this.ptoken).subscribe(data => {\n      if (data.decrypted) {\n        this.decrypted = forge.util.decodeUtf8(data.decrypted.data);\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport * as forge from 'node-forge';\nconst pki = forge.pki;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  currentTime: any;\n  nonceHex: any;\n  caCertPem: any;\n  signatureHex: any;\n  verified: any;\n  caCommon: any;\n  caOrganization: any;\n  caOU: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.connectHome().subscribe(data => {\n      this.currentTime = new Date(data.currentTime);  // Server current time\n      this.nonceHex = data.nonceHex;\n      this.caCertPem = data.caCertPem;\n      this.signatureHex = data.signatureHex;\n\n      let caCert = pki.certificateFromPem(data.caCertPem);\n      let caPublicKey = caCert.publicKey;\n      let signature = forge.util.hexToBytes(data.signatureHex);\n      let clientTime = new Date().getTime();          // Client current time\n      let diff = clientTime - data.currentTime;\n\n      let md = forge.md.sha1.create();\n      md.update(data.currentTime, 'utf8');\n      md.update(data.nonceHex, 'utf8');\n      let result = caPublicKey.verify(md.digest().bytes(), signature);\n      if (result == true && diff < 100000) {\n        this.verified = result;\n        localStorage.setItem('caCert', data.caCertPem);\n      }\n\n      this.caCommon = caCert.subject.getField('CN').value;\n      this.caOrganization = caCert.subject.getField('O').value;\n      this.caOU = caCert.subject.getField('OU').value;\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  constructor(private authService: AuthService) { }\n  users: any;\n  ngOnInit() {\n    this.authService.getList().subscribe(users => {\n      this.users = users;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { UserNoPW } from 'src/app/models/User';\nimport * as forge from 'node-forge';\nconst pki = forge.pki;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n  userNoPW: UserNoPW;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // ID/Pass login\n  onLoginSubmit() {\n    // Get ca certificate\n    let caCertPem = localStorage.getItem('caCert');\n    let caCert = pki.certificateFromPem(caCertPem);\n    let caPublicKey = caCert.publicKey;\n\n    // Build up LoginInfo\n    const loginInfo = {\n      username: this.username,\n      password: this.password\n    }\n    let loginInfoJson = JSON.stringify(loginInfo);\n\n    // Encrypt LoginInfo with CA's public key\n    let key = forge.random.getBytesSync(16); // Random Session Key for AES encryption\n    let cipher = forge.cipher.createCipher('AES-ECB', key);\n    cipher.start();\n    cipher.update(forge.util.createBuffer(loginInfoJson, 'binary'));\n    cipher.finish();\n    let ciphertext = cipher.output;  // Encrypted userInfo\n    let ciphertextHex = forge.util.bytesToHex(ciphertext);\n    let encryptedKey = caPublicKey.encrypt(key, 'RSA-OAEP');  // Encrypted session key with server's public key\n    let encryptedKeyHex = forge.util.bytesToHex(encryptedKey);\n\n    // Encrypted LoginInfo.\n    const loginInfoEnc = {\n      ciphertextHex: ciphertextHex, // Encrypted userInfo\n      encryptedKeyHex: encryptedKeyHex // Encrypted session key with server's public key\n    }\n\n    this.authService.authenticateUser(loginInfoEnc).subscribe(data => {\n      if (data.success) {\n\n        // Recover UserInfo\n        let ciphertextToHex = data.ciphertextToHex;\n        let ciphertext = forge.util.hexToBytes(ciphertextToHex);\n        let decipher = forge.cipher.createDecipher('AES-ECB', key);\n        decipher.start();\n        decipher.update(forge.util.createBuffer(ciphertext, 'binary'));\n        decipher.finish();\n        let recovered = decipher.output;\n        let recoveredParse = JSON.parse(recovered);\n        let ptoken = recoveredParse.ptoken;\n        let stoken = recoveredParse.stoken;\n        let userNoPW = recoveredParse.userNoPW;\n\n        this.userNoPW = userNoPW;\n\n        // Store Token and User Info\n        this.authService.storeUserData(ptoken, stoken, userNoPW);\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 5000\n        });\n        this.router.navigate(['dashboard']);  //Logged in and Redirect to dashboard\n      } else {\n        this.flashMessage.show(data.msg, {\n          cssClass: 'alert-danger',\n          timeout: 5000\n        });\n        this.router.navigate(['login']);  // Login failed and redirect to Login page\n      }\n    });\n  }\n\n  // One-click easy login using digital signature\n  onLoginSigSubmit() {\n    this.authService.authenticateSigUser().subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.ptoken, data.stoken, data.userNoPW);\n        this.flashMessage.show('Easy login successful', { cssClass: 'alert-success', timeout: 5000 });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 5000 });\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjL21hYy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport * as forge from 'node-forge';\n\n@Component({\n  selector: 'app-mac',\n  templateUrl: './mac.component.html',\n  styleUrls: ['./mac.component.scss']\n})\nexport class MacComponent implements OnInit {\n\n  plaintext: string;    // User input plaintext\n  ctime: any;           // Client current time\n  ptoken: any;          // Public token\n  stoken: any;          // Secret token\n  mac: any;             // Mac value\n  key: any;             // One-time secret key\n  msg: string;          // Server reply message\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onMacSubmit() {\n    this.ctime = new Date().getTime().toString();\n    this.ptoken = localStorage.getItem('ptoken');\n    this.stoken = localStorage.getItem('stoken');\n    this.key = this.authService.getKey(this.ctime, this.stoken);\n    const plaintextUtf8 = forge.util.encodeUtf8(this.plaintext);\n    this.mac = this.authService.getMac(plaintextUtf8, this.key);\n\n    this.authService.macMessage(plaintextUtf8, this.ctime, this.ptoken, this.mac).subscribe(data => {\n      console.log(data);\n      this.msg = data.msg;\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are now logged out. Login again?', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  checkLoggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  onDeleteCertClick() {\n    localStorage.clear();   // Clear localStorage\n    this.authService.logout();\n    this.flashMessage.show('Certificate deleted. You are now logged out. ', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  age: number;\n  ptoken: any;  // Public token\n  stoken: any;  // Secret token\n  ctime: any;   // Client current time\n  auth: any;    // One-time auth info\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.ctime = new Date().getTime().toString();\n    this.ptoken = localStorage.getItem('ptoken');\n    this.stoken = localStorage.getItem('stoken');\n    this.auth = this.authService.computeAuth(this.ctime, this.stoken);\n\n    this.authService.getProfile(this.ptoken, this.ctime, this.auth).subscribe(profile => {\n      this.name = profile.userNoPW.name;\n      this.username = profile.userNoPW.username;\n      this.email = profile.userNoPW.email;\n      this.age = profile.userNoPW.age;\n    }, err => {\n      console.log(err);\n      this.authService.logout();\n      this.router.navigate(['login']);\n      return false;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport * as forge from 'node-forge';\n\nconst pki = forge.pki;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: string;\n  email: string;\n  username: string;\n  password1: string;\n  password2: string;\n  password: string;\n  age: number;\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n\n    // Get Server certificate\n    const caCertPem = localStorage.getItem('caCert');\n    const caCert = pki.certificateFromPem(caCertPem);\n    const caPublicKey = caCert.publicKey;\n\n    // Check two password inputs\n    if (this.password1 !== this.password2) {\n      this.flashMessage.show('Two password inputs are not equal', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Generate new user info\n    const userInfo = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password1,\n      age: this.age\n    };\n\n    const userInfoJson = JSON.stringify(userInfo);\n\n    // Check all input fields\n    if (!this.validateService.validateRegister(userInfo)) {\n      this.flashMessage.show('Fill out all required fields!', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Validate email address\n    if (!this.validateService.validateEmail(userInfo.email)) {\n      this.flashMessage.show('Use correct email address!', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    // Encrypt Login Info with Server's public key\n    let key = forge.random.getBytesSync(16); // Random Session Key for AES encryption\n    let cipher = forge.cipher.createCipher('AES-ECB', key);\n    cipher.start();\n    cipher.update(forge.util.createBuffer(userInfoJson, 'binary'));\n    cipher.finish();\n    let ciphertext = cipher.output;  // Encrypted userInfo\n    let ciphertextHex = forge.util.bytesToHex(ciphertext);\n    let encryptedKey = caPublicKey.encrypt(key, 'RSA-OAEP');  // PublicKey-encrypted session key\n    let encryptedKeyHex = forge.util.bytesToHex(encryptedKey);\n\n    // Encrypted Login Info\n    const register = {\n      ciphertextHex: ciphertextHex,\n      encryptedKeyHex: encryptedKeyHex\n    }\n\n    // Register New User\n    this.authService.registerUser(register).subscribe(data => {\n      if (data.success) {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-success', timeout: 3000 });\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n        this.router.navigate(['/register']);\n      }\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, Login, UserNoPW } from '../models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport * as forge from 'node-forge';\nconst pki = forge.pki;\n\n// Basic header option\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  ptoken: any;          // Public token\n  stoken: any;          // Secret token\n  userNoPW: UserNoPW;   // Logged in user information without password\n\n  constructor(\n    private http: HttpClient,\n    public jwtHelper: JwtHelperService\n  ) { }\n\n  // 0. API Connection\n  prepEndpoint(ep) {\n    // 1. localhost service\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku cloud porting\n    return ep;\n  }\n\n  // 1. Connecting Home, distribute server certificate\n  connectHome(): Observable<any> {\n    const homeUrl = this.prepEndpoint('users/home');\n    return this.http.get(homeUrl, httpOptions);\n  }\n\n  // 2. Register new user\n  registerUser(register): Observable<any> {\n    const registerUrl = this.prepEndpoint('users/register');\n    return this.http.post<User>(registerUrl, register, httpOptions);\n  }\n\n  // 3. ID/Pass login\n  authenticateUser(login): Observable<any> {\n    const loginUrl = this.prepEndpoint('users/authenticate');\n    return this.http.post(loginUrl, login, httpOptions);\n  }\n\n  // 4. One-click easy login\n  authenticateSigUser(): Observable<any> {\n    const privateKeyPem = localStorage.getItem('privateKey');\n    const privateKey = pki.privateKeyFromPem(privateKeyPem);\n    const certPem = localStorage.getItem('cert');\n    const currentTime = new Date().getTime();\n    const cert = pki.certificateFromPem(certPem);\n    const username = cert.subject.getField('CN').value;\n\n    // Signature generation on username, currentTime\n    let md = forge.md.sha1.create();\n    md.update(username, 'utf8');\n    md.update(currentTime, 'utf8');\n    const signature = privateKey.sign(md);\n    const signatureHex = forge.util.bytesToHex(signature);\n\n    // Easy login request\n    const request = {\n      username: username,\n      currentTime: currentTime,\n      signatureHex: signatureHex,\n      certPem: certPem\n    };\n\n    const loginUrl = this.prepEndpoint('users/authenticateSig');\n    return this.http.post(loginUrl, request, httpOptions);\n  }\n\n  // 5. Profile page using dual-token authentication (DTA)\n  getProfile(ptoken, ctime, auth): Observable<any> {\n    // Http header option for DTA\n    const httpOptions1 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ptoken,\n        'Ctime': ctime,\n        'Auth': auth\n      })\n    };\n\n    const profileUrl = this.prepEndpoint('users/profile');\n    return this.http.get(profileUrl, httpOptions1);\n  }\n\n  // 6. Blog page using standard JWT authentication\n  getBlog(): Observable<any> {\n    // http header option for JWT\n    const httpOptions2 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.ptoken\n      })\n    };\n\n    const blogUrl = this.prepEndpoint('users/blog');\n    return this.http.get(blogUrl, httpOptions2);\n  }\n\n  // 7. Show user list\n  getList(): Observable<any> {\n    const listUrl = this.prepEndpoint('users/list');\n    return this.http.get(listUrl, httpOptions);\n  }\n\n  // 8. Message encryption using one-time secret key\n  encryptedMessage(encrypted, ctime, ptoken): Observable<any> {\n    // http header option for message encryption\n    const httpOptions3 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ptoken,\n        'Ctime': ctime,\n        'Enc': encrypted\n      })\n    };\n\n    const encryptUrl = this.prepEndpoint('users/encrypt');\n    return this.http.get(encryptUrl, httpOptions3);\n  }\n\n  getEncrypt(plaintext, key) {\n    let plaintextUtf8 = forge.util.encodeUtf8(plaintext);\n    let key1 = forge.util.hexToBytes(key);\n    let cipher = forge.cipher.createCipher('AES-ECB', key1);\n    cipher.start();\n    cipher.update(forge.util.createBuffer(plaintextUtf8, 'binary'));\n    cipher.finish();\n    let ciphertext = cipher.output;\n    return forge.util.bytesToHex(ciphertext);\n  }\n\n  // 9. Message authentication using one-time secret key\n  macMessage(plaintext, ctime, ptoken, mac): Observable<any> {\n    // http header option for message authentication\n    const httpOptions4 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ptoken,\n        'Ctime': ctime,\n        'Mac': mac,\n        'Plaintext': plaintext\n      })\n    };\n\n    const macUrl = this.prepEndpoint('users/mac');\n    return this.http.get(macUrl, httpOptions4);\n  }\n\n  getMac(plaintext, key) {\n    let md = forge.md.sha256.create();\n    md.update(plaintext + key);\n    return md.digest().toHex();\n  }\n\n  // 10. Issuing certificate\n  certRequest(request): Observable<any> {\n    // Key generation\n    let keyPair = pki.rsa.generateKeyPair(2048);\n    let publicKey = keyPair.publicKey;\n    let privateKey = keyPair.privateKey;\n    let publicKeyPem = pki.publicKeyToPem(publicKey);\n    let privateKeyPem = pki.privateKeyToPem(privateKey);\n\n    // Storing private key\n    localStorage.setItem('privateKey', privateKeyPem);\n\n    // Certificate request. UTF-8 encoding.\n    const req = {\n      country: forge.util.encodeUtf8(request.country),\n      state: forge.util.encodeUtf8(request.state),\n      locality: forge.util.encodeUtf8(request.locality),\n      organization: forge.util.encodeUtf8(request.organization),\n      orgUnit: forge.util.encodeUtf8(request.orgUnit),\n      common: request.common, // common = username should be English\n      publicKey: publicKeyPem\n    }\n\n    const certUrl = this.prepEndpoint('users/cert');\n    return this.http.post(certUrl, req, httpOptions);\n  }\n\n  // Other utility functions\n  // 1. Store user data in LocalStorage\n  storeUserData(ptoken, stoken, userNoPW) {\n    localStorage.setItem('ptoken', ptoken);\n    localStorage.setItem('stoken', stoken);\n    localStorage.setItem('userNoPW', JSON.stringify(userNoPW));\n    this.ptoken = ptoken;\n    this.stoken = stoken;\n    this.userNoPW = userNoPW;\n  }\n\n  // 2. Delete user info in logout\n  logout() {\n    this.ptoken = null;\n    this.stoken = null;\n    this.userNoPW = null;\n    localStorage.removeItem('ptoken');\n    localStorage.removeItem('stoken');\n    localStorage.removeItem('userNoPW');\n  }\n\n  // 3. Check loggedIn state using JWT\n  loggedIn() {\n    return !this.jwtHelper.isTokenExpired(this.ptoken);\n  }\n\n  // 4. Generate one-time key\n  getKey(ctime, stoken) {\n    let md = forge.md.sha256.create();\n    md.update(ctime + stoken);\n    const key = md.digest().toHex();\n    return key;\n  }\n\n  // 5. Generate one-time auth\n  computeAuth(ctime, stoken) {\n    let md = forge.md.sha256.create();\n    md.update(ctime + stoken);\n    return md.digest().toHex();\n  }\n\n  // 6. Store certificate\n  storeCert(cert, caCert) {\n    localStorage.setItem('cert', cert);\n    localStorage.setItem('caCert', caCert);\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}